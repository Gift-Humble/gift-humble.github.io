<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>mybatis使用c3p0连接池，mysql8版本，关于mybatis-config.xml的配置</title>
    <url>/2020/02/18/mybatis%E4%BD%BF%E7%94%A8c3p0%E8%BF%9E%E6%8E%A5%E6%B1%A0/</url>
    <content><![CDATA[<hr>
<p>1、导入c3p0后，mybatis-config.xml需要更换数据源(POOLED改为c3p0.C3P0DataSourceFactory)，如果是mysql8，还需要修改四个property的name属性：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">data</span> <span class="attr">Source</span> <span class="attr">type</span>=<span class="string">"c3p0.C3P0DataSourceFactory"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClass"</span> <span class="attr">value</span>=<span class="string">"com.mysql.cj.jdbc.Driver"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbcUrl"</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag"><span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/how2java?characterEncoding=utf8<span class="symbol">&amp;amp;</span></span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">useSSL=false<span class="symbol">&amp;amp;</span>serverTimezone=UTC<span class="symbol">&amp;amp;</span>rewriteBatchedStatements=true"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"123123"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
<p>2、①可以选择导入c3p0-0.9.1.2.jar</p>
<p>②也可以选择导入c3p0-0.9.5.2.jar,配合一个mchange-commons-0.2.jar，否则会报错找不到里面的类</p>
<hr>
<p>3、如果不是用mysql8的版本，以上可能不用更改name属性，即原来的driver，url，username，password（虽然我没试过其他版本）</p>
<hr>
<p>4、最后，如果不用c3p0，不用修改name属性，原来的配置方式为</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dataSourcetype=POOLED"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.cj.jdbc.Driver"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag"><span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/how2java?characterEncoding=utf8<span class="symbol">&amp;amp;</span></span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">useSSL=false<span class="symbol">&amp;amp;</span>serverTimezone=UTC<span class="symbol">&amp;amp;</span>rewriteBatchedStatements=true"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"123123"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>解决问题</category>
      </categories>
      <tags>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬虫xpath实战练练手</title>
    <url>/2020/02/17/python%E7%88%AC%E8%99%ABxpath%E5%AE%9E%E6%88%98%E7%BB%83%E7%BB%83%E6%89%8B/</url>
    <content><![CDATA[<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python</span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">url = <span class="string">'https://www.sshs.cc/page/4'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># get htmlText</span></span><br><span class="line">r = requests.get(url)</span><br><span class="line">r.encoding = r.apparent_encoding</span><br><span class="line"></span><br><span class="line"><span class="comment"># parse htmlText</span></span><br><span class="line">dom = etree.HTML(r.text)</span><br><span class="line"></span><br><span class="line"><span class="comment"># parse html hrefs return list</span></span><br><span class="line">hrefs = dom.xpath(<span class="string">"//article/header/h2/a/@href"</span>)</span><br><span class="line">titles = dom.xpath(<span class="string">"//article/header/h2/a/@title"</span>)</span><br><span class="line">print(<span class="string">"帖子链接解析完毕！"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">'绅士会所壁纸爬虫'</span>):</span><br><span class="line">    print(<span class="string">'已创建文件夹--&gt;绅士会所壁纸爬虫'</span>)</span><br><span class="line">    os.mkdir(<span class="string">"绅士会所壁纸爬虫"</span>)</span><br><span class="line">os.chdir(<span class="string">'绅士会所壁纸爬虫'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(hrefs)):</span><br><span class="line">    r1 = requests.get(hrefs[i])</span><br><span class="line">    r1.encoding = r1.apparent_encoding</span><br><span class="line">    dom1 = etree.HTML(r1.text)</span><br><span class="line">    imgurl = dom1.xpath(<span class="string">"//article/p/img/@src"</span>)</span><br><span class="line">    imgname = dom1.xpath(<span class="string">"//article/p/img/@alt"</span>)</span><br><span class="line"></span><br><span class="line">    filename = re.sub(<span class="string">'[\\\/:*?"&lt;&gt;|]'</span>, <span class="string">''</span>, titles[i])</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(filename):</span><br><span class="line">        print(<span class="string">'已创建文件夹--&gt;'</span>, filename)</span><br><span class="line">        os.mkdir(filename)</span><br><span class="line">    os.chdir(filename)</span><br><span class="line">    print(filename, <span class="string">'正在下载...'</span>)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(imgurl)):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(imgname[j]):</span><br><span class="line">            <span class="keyword">with</span> open(imgname[j], <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(requests.get(imgurl[j]).content)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'已存在图片--&gt;'</span>, imgname[j])</span><br><span class="line">    print(filename, <span class="string">'下载完成'</span>)</span><br><span class="line">    os.chdir(<span class="string">'..'</span>)</span><br></pre></td></tr></table></figure>

<p>如上简单的代码，主要这次用xpath来寻找要爬的链接，主要重点在于解析xpath解析过程，<strong>注意中img是元素，src是属性，若要得到src链接就要用//img/@src（//前面省略),如果是//img[@src]那么返回的是他的属性类型，不是确切的url。此外里面还用到正则表达式用来排除文件夹非法字符的而不是用来寻找链接的。</strong></p>
<p><strong>url可由最后page/1改变数字得到其他网页，因为一页爬的时间还是太久了就只让他每次爬一张，而且都是福利也没啥好玩的?，学习学习就行了。</strong></p>
<p><strong>不懂可问，不好可点。</strong></p>
]]></content>
      <categories>
        <category>练手</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
</search>
